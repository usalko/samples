#!/bin/bash

# CHECK PYTHON 3
if command -v python3 &>/dev/null; then
   echo Python3 available
else
   echo Python3 not available, please install it or add to the PATH variable
   exit 1
fi

# CHECK PIP
if command -v python3 -m pip &>/dev/null; then
   echo Pip available
else
   echo Pip not available, please install it or add to the PATH variable
   exit 1
fi

# CHECK VIRTUALENV COMMAND
if command -v python3 -m venv &>/dev/null; then
   echo Venv command available
else
   echo Venv not available, please install it [For example: python3 -m pip install python-venv]
   exit 1
fi


COMMAND=$1
PYTHON_VERSION=3
# CHECK VENV NOT EXISTS
if [ ! -d .venv ]; then
    while [[ "$#" -gt 0 ]]; do
        case $1 in
            --python-version) PYTHON_VERSION="$2"; shift ;;
            *) COMMAND=$1; break ;;
        esac
        shift
    done

    python3 -m venv .venv
    if [ ! -d .pip ]; then
        mkdir .pip
        curl https://bootstrap.pypa.io/get-pip.py -o .pip/get-pip.py
        .venv/bin/python3 .pip/get-pip.py
    fi
    .venv/bin/pip3 install -r requirements.txt
fi

if [ -f '.buildew' ]; then
    echo Use .buildew file to read sensitive information
    while IPS='=' read -r key value; do
    #echo $key, $value
    #key=$(echo $key | tr '.' '_')
    #eval ${key}=\${value::1}
    eval ${key}
    done < '.buildew'
else
    # REGENERATE SENSITIVE INFO FROM TEMPLATE
    cat >'.buildew'<< EOF

EOF
fi


echo EXECUTE
echo =========== $COMMAND
echo $COMMAND ===========
echo COMMAND


AVAILABLE_COMMANDS=""
echo ''
[[ $AVAILABLE_COMMANDS =~ (^| )$COMMAND($| ) ]] && echo 'Ok' || echo 'Unknown command: ' "$COMMAND" && echo 'Available commands are: ' "$AVAILABLE_COMMANDS"

